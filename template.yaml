AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  warmane-pvp-analytics

  Sample SAM Template for warmane-pvp-analytics

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'http://localhost:3000'"

  CrawlerTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: crawl_trigger.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TARGET_FUNCTION: !GetAtt CrawlerFunction.Arn
      Timeout: 60 # reduce this later
      Policies:
        - LambdaInvokePolicy:
            # FunctionName: !GetAtt CrawlerFunction.Arn
            FunctionName: "*"
      Events:
        CrawlerTrigger:
          Type: Api
          Properties:
            Path: /crawl
            Method: post
            RestApiId:
              Ref: ApiGatewayApi

  CrawlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: crawl.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 300
      Environment:
        Variables:
          TABLE_NAME: !Select [1, !Split ['/', !GetAtt MatchesTable.Arn]] 
      Policies:
        - Statement:
          - Sid: DynamoWritePolicy
            Effect: Allow
            Action: "*" # TODO: not use *
            Resource: !GetAtt MatchesTable.Arn

  GetMatchesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: get_matches.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 60
      Environment:
        Variables:
          TABLE_NAME: !Select [1, !Split ['/', !GetAtt MatchesTable.Arn]] 
      Policies:
        - Statement:
          - Sid: DynamoReadPolicy
            Effect: Allow
            Action: "*" # TODO: not use *
            Resource: !GetAtt MatchesTable.Arn
      Events:
        GatewayTrigger:
          Type: Api
          Properties:
            Path: /matches/{id}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
            RequestParameters:
              method.request.path.id:
                Required: true

  MatchesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
        -
          AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
        -
          AttributeName: "date"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST




Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API URL for the prod stage"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
