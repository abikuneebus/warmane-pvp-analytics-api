name: Continuous Deployment
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install dependencies
        run: npm install

      - name: prettier
        run: npm run prettier

      - name: eslint
        run: npm run eslint

      - name: test
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: sudo apt-get update && sudo apt-get install -y zip
      - run: npm install --production
      - run: npm run build
      - run: cp -r node_modules build
      # - run: cd build/ && zip -r ../$(git symbolic-ref --short HEAD).zip .
      # - uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      # - run:
      # - run: aws s3 cp ./build s3://simoni-enterprises-artifacts/${GITHUB_REPOSITORY} --recursive

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: setup terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: terraform format
  #       id: fmt
  #       run: |
  #         cd infrastructure
  #         terraform fmt -check

  #     - name: terraform
  #       id: init
  #       run: |
  #         terraform -chdir=infrastructure init

  #     - name: terraform validate
  #       id: validate
  #       run: |
  #         terraform -chdir=infrastructure validate -no-color

  #     - name: terraform plan
  #       id: plan
  #       run: |
  #         terraform -chdir=infrastructure plan -no-color -input=false

  #     - name: terraform apply
  #       if: github.ref == 'refs/heads/v2' && github.event_name == 'push'
  #       run: |
  #         terraform -chdir=infrastructure apply -auto-approve -input=false
